<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw8PEhMSEhASFRAWGBIWFxgPDhYXEhIXFhUWFxYYExYZ
        HSgiGBolHRUYIj0iMSkrLi8uFyAzODMsNygtLiv/2wBDAQoKCg4NDhsQEBstJiAmLi4tLy0tLS0uLzct
        LS0tLy8vLS8tLS0tLS0tLS0tLS8rLS0tKy0tLS01LS0tLS0vLS3/wAARCADgAOEDAREAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHAQQFAwII/8QAQxAAAQQAAQkFBAcGBAcAAAAAAQACAxEEBQYSITFB
        UWFxBxMigaEyQnKRFCNSYoKSsSQzQ6KywRZTwtEVVHOTo9Lw/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAQF
        AgMGAf/EADMRAQACAQICBwgCAgMBAQAAAAABAgMEESExBRITQVGR8CIyYXGhsdHhgcFCUhQj8UMz/9oA
        DAMBAAIRAxEAPwC8UBAQEBAQEBBglBxMo52YKCx3mm4e7CNL+b2QfNTMWhzZO7aPjw/aLk1mKnfv8vWy
        O43P+Q6ooGt5yuLj+VtV8yp2Poqv+dvJDv0jb/Cvm42Jzsx0n8ctHCNrW+tX6qXXQ4K/4+aNbWZrf5eT
        nSZSxDvanmPxTPP91vjDjjlWPKGmct552nzlrueTtJPU2s4iI5MZmZ5sBxGw10K92ebtiPHzt9maVvwz
        OH6Fa5xUnnWPKGcZLxytPnLew+c+Oj2YhxHB4a+/NwJ9VptosFudfLg211eav+TsYPP6dv72GN44sJYf
        WwfRRb9F0n3bTH1/CTTpG8e9ET9PykOT888FLqc4xO4TCh+YWB5kKDk6OzU5Rv8AL8JePXYrc52+frZI
        I3hwBaQWnYQbB6FQpiYnaUuJieMPpePRAQEBAQEBAQEBAQEBAQYc4AWTQG29gTmInlrPiCK2wDvX/auo
        h5+95auassHRt78cnCPr+vXBAza+leFOM/T9oTlTLmJxX72Ulv2G+GMfhG3zsq3w6bFi9yP571Zlz5Mn
        vT/Hc51re0loFoFoFoFoFoFoFoFoNvJ+U58MbilcziAfCerTqPyWrLhx5Y2vG7Zjy3xzvWdk0yNn4x1N
        xLNA/bjBLPxN2j18lVZ+jJjjinf4SssPSETwyRt8UxgmZI0OY4OadYLSCCORCqrVms7THFY1tFo3h6Lx
        6ICAgICAgICAgICDm5by3Bg2aUjvEfZY3W9/QcOexb8Gmvmnavm05s9MUb28lZ5ezkxGMNOOjFujYfD+
        I+8fTkFf6fSY8PLjPj65KbPqb5efCPD1zce1KRy0C0C0C0C0C0C0C0C0C0C0C0C0HQyPlqfCO0on6j7T
        Ha2O6jjzGtac+nx5o2vH897biz3xTvWf4WXm7nLBjRQ8EwFmNx19WH3h68QFQanR3wTvzjxXODVUy8OU
        +DtqIkiAgICAgICAgII7nVnQzBjQZT8QRqb7rB9p/wDttPLap2k0ds07zwr65Imp1UYo2jjb1zVfjMXJ
        M8ySPLnu2k/oOA5LoKUrSvVrG0KW97XnrWni8bWTEtAtAtAtAtAtAtAtAtAtAtAtehaBaBaD6jlc0hzX
        FrgbBaaIPEEbF5MRMbSRMxO8LHzRzuGIqGcgT7Gu2Nl5cn8th3cFRazQ9n7ePl9v0uNLrOv7F+f3/aXq
        sTxAQEBAQEBBHM785W4JmgyjiHjwjcwbNN39hvPQqdo9JOa28+7HrZE1WpjFG0c59bqrmmc9xc5xc5xJ
        JcbJJ3ldDWIrG0clJMzM7y+LXrwtAtAtAtAtB08lZBxWKoxREs+27wx+Tjt8rWjNqsWL3p4+He3YtPky
        e7HDx7kpwPZ3vmxHlC3Z0e7b+VV2TpX/AEr5/iPym06O/wB7eXr+nZhzGwDdrHv5vmcP6CFGt0lnnlMR
        /H53SI0GGOcfWf6e5zNyd/y//ml/9lh/z9R/t9I/DL/hYP8AX6z+Wricw8C72RLH8EpP9drZXpPPHPaf
        4/GzC2gwzy3j+fzu4GUuz6dlmCVsg+y8aD+gOsE/JTMXSlJ4Xjb6+vqi5Oj7x7k7+vXgiWMwssLiyVjm
        P4PFeY4jmFZUyVvG9Z3hBvS1J2tGzxtZMS0C0C0C0C0Fk5k51d/WHnd9cB4HH+KBuP3wPmPNUWu0XZ/9
        lOXf8P0t9Jq+v7F+f3/aYqsWAgICAgIOZnFllmChdK7W7Yxt+247B03k8At+mwTmv1Y/n5NOfNGKnWn+
        FOY3FyTPdJI7Se42T/YcANlcl09KVpWK15QoL2m8za3N42s2JaBa8C0C0G3kvJs2Kf3cLC52/c1o4uO4
        f/C1ry5qYq9a8s8eO2SerWFj5BzIw8FOmqaX7w+qafut39T8gqTUdI5MnCnCPqt8OhpTjbjP0SoBVyaI
        CAgICDUylk2HEsLJWBzd17Wni07WnmtmLLfFbrUnZhkx1yRtaFW51ZsSYF2kCX4cmg+tbTubJWw89h5b
        F0Gk1lc8bTwt4fhS6nSzhnfnHj+UftTEUtAtAtAtB9MeWkEEhwIIINEEawQdxSYiY2kjhxhbeZ2cIxsV
        OoTsoPH2uDwOB9DfJc3rdL2F+Huzy/C90uo7WvHnHP8AKQKGlCAgIMOcACSaA1knYOqcxTedmXDjZy4E
        9y22xj7u93V1X0obl0+k0/Y49u+efr4KDU5+1vv3d3r4uLalNBaBaPC0C0HbzZzdlxz9XhhafG8jZ91n
        F36bTuBi6rVVwV48Z7o9dyRg09s08OXfPrvWzkvJsOFjEcTA1o2/aceLjvK5zLlvlt1ryvMeOuOvVrDb
        WtmICAgICAgIPLE4dkrHMe0OY4EEHYQVlW01mLV5vLVi0bSprObIzsFO6M2WHxRuPvMOy+Y2Hpe9dPpd
        RGbHFu/v+agz4ZxX6vd3OUpDSIFoFoFoN3IuVH4SZkzNrdRF6ntPtNPX9QDuWnPhrlpNJZ4sk47xaF14
        LFsnjZKw2x4DgeR48DyXL3pNLTW3OHQ0tF6xaOUvdYMhAQQ3tJyz3MIw7D45r0q3Rjb+Y6umkrPo3B17
        9pPKPv8Ar8IGvzdWnUjv+37VjavVQWgWgWgWgWgsfsrxVxTxb2va/wAntrV5xn5ql6Vp7VbfDby/9WvR
        1vZtX47+f/icqpWIgII5l3PPCYQlgJllGotiIpp++7YOms8lNwaDLl48o8ZRc2sx4+HOfgiOK7RMY4+C
        OFjeBa57vzWAfkrKvReKI9qZn6INukMs8oiPr68mcH2iYtp+sjikbwaCx3kbI9F5fovFMezMx9SvSGSJ
        9qIn6J5kHL0GOZpRE6QrSY7U9l7LHDns9VUajTXwW2t5rLDnpljevk6i0NwgIIl2lZPEmFEoHjhcDz0X
        kNcOllp/CrHozL1cvV7p/pB1+PrY+t3wqu1fqctAtehaBaBaCe9mOWaLsI86jb4747XtH9Xk5VHSmDeI
        yx8p/r8eSy6Py7TOOfnH9/nzWIqVaCDBNIKQzkyp9LxMk1+EmmcmN1N+e3q4rqtNh7LFFPP5uez5O0yT
        by+TmWt7UWgWgWgWgWgl/ZjitDFuZeqSNw6uaQ4emkq3pOm+GJ8J9f0naC22Xbxj1/a1FQLhhzgASSAB
        rJJ1Ac0iNxWWd+ezpi6HDOLYdjpG6nScmH3Wc9p5Dbe6Po+Ke3k5+Hh+1RqdZNvZx8vHx/SFBWiAWgWg
        38h5Vfg5mTNvwmnAe+w+035eoB3LTnwxmpNJ9S2Yss4rxaPULyjeHAOBsEAgjeDsXKzG07S6KJ3fS8BB
        ys6mg4LFX/kynzDCR+ikaSf++nzj7tGp/wDxv8p+ykbXUqAtAtAtAtAtB7YLFvgkZKz22ODhzo7DyOzz
        WF6Res1nlLKtpraLR3L2wOKbNGyVnsPa1w6OF6+a5S9Jpaazzh0VLRasWjve6wZI9n3lH6Pg5CDT5Kib
        r3vvSrmGhx8lM0GLtM8eEcfL9o2rydTFPx4KbXSqJm0GLQLQLQLQLQbuRconCzxzhukWEnR0q0gWlpF0
        a1OO5as2KMuOaT3tmK/Z3i/gnkHaZF7+GkHwSNd+uiqm3RNu60evNYx0jXvrPrycbPDPT6YwRQNeyI65
        O8oPfwb4SRo79uvoNcnR6Dsbde+0z3evFH1Or7WOrXhHeh9qyQi0C0C0C0F4ZqOJwWFJ29zF6MAXLaqN
        s9/nLoNNP/TX5Q6qjtwg4WfGJEeBxB+03Q/7hDP9Xopehr1s9fPy4o+rttht5efBS9rplCWgWgICAgIL
        R7Lso95h3wk+KJ2r4JLcP5g/0VD0pi6uSLx3/ePULfQZN6TXw/v1KaKsT1bdrGNuSCAH2WukI5uOi3+l
        /wA1d9FY/Ztf+PX0VfSF/arX+fX1QK1bK4tBi0C0C0C0C0C0C0C0C0C0C0C0GWNc4hrRbiQABvJNAfNe
        TMRxk2meEL+ydhRDFHENkbGMH4Wgf2XJZL9e828Z3dHSsVrFY7mwsGQgrztWymPqcMDr/ev9WsB624+Q
        Vx0Vi97JPyj+1Z0hk5Uj5/hXdq5VpaBaBaBaBaBaCVdmuN7vGhl6pWPZy0gNMH5NcPxKv6Sx9bBv4Tv/
        AEl6G/Vy7eP/AKt1c8ulL5/YnvMfPwboMHRrBf8AMXLpdBXq6evx4/VR6u2+a3kj1qYjFoFoFoFoFoFo
        FoFoFoFoFoFoFoJh2bZEM8/fuH1UJsXsdLXhH4b0uujxVd0jqOpj6kc5+375eabosPXv155R9/X9LZXP
        rgQeGOxbII3yyGmMBc48hw4nksqUm9orXnLG9orWbTyhRGV8pPxU0kz/AGnm6v2Rsa3yAAXV4sUYqRSO
        5z+TJOS02nvalrYwLQLQLQLQYtAtBvZDxXdYmCS60ZIyemkNL0tas9etjtX4S2YrdW9Z+ML8XJuhUDly
        XTxOIdxmmPl3jq9F1mCNsVY+EfZz2Wd72n4z92la2tYgICAgICAgWgWgWgWgWg6OQMizY6URRjm95Hhj
        bxPPgN/zI0589cNOtby8W3Fitlt1arvyTk6LCxMhiFMaN+1x3ucd5J1rmMuW2W83tzle48cUrFatta2Y
        gqztJzk75/0WJ31UZ+sIOp8g93o39fhV70dpepHa25zy+X7+3zVOtz9aezryjn8/190GtWiAWgWgWgWg
        Wj0tAtBh51HzSObyeS6P8SjiFzX/ABl72ynMU+3vPFzj83FdHThWFJb3peVrJ4WgWgWgWgWgWgWgWgWg
        WgWg2slZPlxUrIYhb3mtexo3udwAGta8uWuOk3tyhnSk3tFarwzfyLFgYRFGObnEeKR29zv9twXMZ89s
        1+tZeYsVcVerDprS2iCF9oOdn0Vpw8Lv2hw8Tmn9y07/AIzu4beF2Wg0faT17+7H1/SFq9T1I6lef2VK
        r9UM2gWgWgWgxaBaBaBaBaDp/wDFXcVo7GG/tpaGLFSPHBzx8nFbae7DVb3peVrJiWgWgWgWgWgWgWgx
        aBaBaBaC2+zHIQgg+kPH1swsXtbF7oHxe10LeCoOktR18nZxyj7/AK5LfRYurTrzzn7euKaqtTRBFM98
        7m4FvdxkOxThqG0RA++/+w39FP0ejnNPWt7v3RNTqYxRtHNTs0znuLnOLnuJLi42XE6ySV0MRERtCnmZ
        md5fFr14WgWgWgWgWgWgWgWgWg6n/CncFo7aG/sZeGXo9DFYlvCaYeXeOr0WWCd8VZ+EfZhlja9o+M/d
        oWtrWWgWgWgWgWgWgWgWgWgWg3ci4E4rEQwf5j2tNbQ3a8jo0E+S15snZ45v4Qzx0694r4v0GxgaAAKA
        AAA2ADYAuTmd+LoX0vBw88M4G5PgMmoyu8MbTvdW0/dG0+Q3hStJp5z5Or3d7RqM3ZU37+5RuJxD5Xuk
        e4ue4kuc7aSV01axWNo5KOZm07y87XrwtAtAtAtAtAtAtHpaBaPHy86ivY5k8l3f4ZHALmf+SveyVr2i
        YbusoT8H6Dx0cwA/zByudBbraevw4KvV12zT5o3amI5aBaBaBaBa9C0C14FoFoFoJj2VYYPx2kR+7ikc
        ORJawej3Kv6Tvtg28Zj8pehrvl38IXGueXAgpTtIyqcRjXtB+rh+rbwvbIeulq/AF0nR+LqYYnvnj+PX
        xU2sydbLMeHBFrU1FEBegvAQEBAQEBAQb+QMN32Jw8dXpSxA/DpAu9AVqz26mK1vhLPFXrXrHxh+hVyb
        oFXdsWBqTDzganNdE482nSZ/U/5K76Jyezan8+vorNfTjW38evqrq1bK8teha8C0C0C0C0C0C0C0C0Fi
        djbLlxTuDIR83PP+lVPS0+zSPn/Sw6Pj2rT8v7WkqRZiD86ZYeTiJydplmJ6mR1rrsUbY6/KPs57J79v
        nP3alrNiWgWgWgWgWgWgWgWgWgWgmHZXge9xwfXhhY9/LScNBo+TnH8KgdJZOrh28Z/aXoqb5d/Bcy51
        cI32h5M+k4GUAW+OpW6tdssurmWFw81M0OXs88eE8PP9o+qx9fFPw4qLtdKpC0C0C0C0C0C0C0C0C0C0
        Ey7Mc4IMHNI2ZwYyYMAefZa5hdWlwB0zr3UFX9I6e+WkTTnHd80zR5a47TFu9ckcjXAOaQWnWC02CORC
        5+YmOErdpZZyxh8HGZJ5A1uuhfieeDG7XFbMWG+W3VpDDJkrSN7S/PmPxPeyySVWm+R9X7Om4urytdVS
        vVrFfCIhQ2nrWmfF4WsmJaBaBaBaBaBaBaBaBaBa9Fv9keTO7wr5yPFM/V8EdtH8xf6Kg6Uy9bLFPD7z
        6hbaGm1Ot4p0qxNYIQfn3OzJBwWKlhrwA6UfON2tvWtberSuq02btcUW7+/5qLPj7O81chSGpi0C0C0C
        0C0C0C0C0C0C0GzhMoTw33U0sd7e6mey+uiQsLY6X96In5xu9ra1fdmYeU875HaT3ue87XPcXOPUnWso
        iKxtEbPJmZneXna9C0C0C0C0C0C0C0C0C0C0Gxk7BvxEscMftyOa0crO08gLPQLDJeKVm08oZUrN7RWO
        9+i8BhGQRRxMFMja1jejRQvnqXJXvN7Taecr6tYrERDYWLIQQTtXyD3+HGJYPrIL0q2uiPtflPi6aSs+
        jc/Uv2c8p+/7Qtbi61OtHOPsp61fqotAtAtAtAtAtAtAtAtAaCSAASSQAALJJ2ADeV4bJtkXs0xs7dOV
        zcO0jUHtLpPNgI0fM3yVdl6TxUnavH7JmPRXtG9uDTzhzCx2DBeGiaEay6EHSaOL49o8rA3kLZg1+LLO
        3Kfj+WGXSZKcecIpanIzNoMWgWgWgWgWgWgWgWgWgszshyDZfjXjUNKOKxv2SPH9N/EqfpTPyxR85/r8
        +Sw0OL/6T/C0VSrIQEGHNBBBAIOogjURzQUHnzm6cn4ktAPcSW6I/d3sJ4tJroWneun0ep7fHvPOOfr4
        qTUYezvt3TyR61LaC0C0GLQLQLQLQLQLQXD2Y5pMgjbi5m3iJBcYcP3LCNRA3PcNd7ga1a7oOkNXN7Tj
        ryjn8Z/C10mnisde3NPlWJogqTtTzVbARjIG1G91StaNTXnY8DcHHUedcSrzo7VTf/qvz7vwrNZgivt1
        /lXdq2QC0C0C0C0C0C0C0C0HSzdyPJjsQyCPVpa3OqxGwVpOPT1JA3rTnzVw0m8+pbMWOclorD9C4DBx
        4eNkUbdGNjQ1o5Ab+J5rlb3m9ptbnK8rWKxEQ2FiyEBAQcjOnIMeUMO6F+p3tMfVmN42HmNxG8Erfp89
        sN4tH8/JqzYoyV6svz9lLAy4aV8MrdGRhpw/Qg7wRrB4FdRjyVyVi1eUqS9Jpaay1lmxEBAtAtAtAtB6
        4RzBIwya49JmnzZpDS9LWNt+rPV5sq7bxvyfpttUK2bq2eS490DKAg4Wfboxk/F95Wj3TwL+2dUfnplq
        k6Pft6beP07/AKNOo27K2/g/PdrqVGWgWgWgWgWgWgWg+omOe4NaC5ziGtDRZcSaAA3kleTMRG8vYjfh
        C98ws1hk6Dx0cTJRkI16PCNp4D1JJ4VzWt1Xb34co5flc6fB2VfjKUKGkCAgICAgiefuZ7Mox6bKbimD
        wOOoPG3u3nhwO4nmbm6PVzgttPuz63R9RgjLHxUbiYHxPdHI0tkaSHNcKLSNxXR1tFo3jkp7Vms7S8rW
        TwtAtAtAtAtAtBdnZlnUzFQNw8jgMTE0NonXLG3U1zeJAoHpe9c90hpZx3m8e7P3W+lzRevVnnCbquSh
        BT3apnYzEuGEgdpRRu0pHNPhe8ag1p3tbr6mvsq96O0s0jtL855fJWazNFvYqr21aoJaBaBaBaBaBaDI
        16ht5DWei8Nlx9nGZP0UDFYhv7SR4Gn+A0jf98j5DVxVDrtb2n/XT3fv+lrptP1PatzT9ViYICAgICAg
        IInnxmVFlFumyo8U0eF9eF4GxktbRz2jnsM3Say2Cdp418Pwj59PGSPio/KWAmw0jopoyyRu0O9CDsIP
        Eal0WPJXJXrVneFRelqTtZrWs2JaBaBaBaBaD6ilcwhzXFrgbBa4hzSNhBGsFeTETG0vYmY4wl+Te03K
        cI0XOimHGeM6Q/EwtvztQcnRuC07xvHy/aVXWZI58Wll3PrKGNaWPlDIjqLMO0sa4cHGy4jldclsw6LD
        ineI3nxlhk1OS8bTPkjdqWjloFoFoFoFoFoPuCF8jmsY1znuNNawEucTuAG1eWtFY3nk9iJmdoXJmBmC
        3CaOIxIDsVta3UWQeexz+ewbuJodbr5y+xT3fv8ApaafTdT2rc0+VYmCAgICAgICAgIOPnJm3hcox6Ez
        PEL0Ht1SRk/ZPDkdRpb8GovhtvWf47mvJirkjaylc68y8Xk4lzh3mH3Sxt8I/wCo3aw+mvUSug02sx5+
        EcJ8Px4qrLpr4/jHijVqWjloFoFoFoFoFoFoFoFoFoFoFoFoOxm3mzi8ov0YGeAGnSP1RM6neeQs6/NR
        8+px4Y3tP8d7diw2yTwXXmjmbhsmtto7zEEU6V48R4hg9xvL5k0qDU6y+eePCPBaYcFcccOfikiiN4gI
        CAgICAgICAgIMOaCCCLB1EHYeqCBZzdl+FxFvwx+jy7dENuBx+D3PLVyKssHSWSnC/GPqiZdJS3GvCVX
        ZfzVx2AJ76F3dj+JH44j+Iez50VcYdViy+7PHw7/AF8kDJgvTnDi2pDSWgWgWgWgWgWgWgWgWg6WRcg4
        vGmsPA+TcXAVG34nnwjpdrTlz48Ue3OzZTFe/uwszNrspijp+Nk7123u4iREPidqc/0HVVOfpS08MUbf
        HvT8WjrHG/FY+HgZE0MjY1jGimtY0Na0cABqCqrWm07zzTIiI4Q9F49EBAQEBAQEBAQEBAQEBAIQRjLO
        YOTMXZdAI3m/Hhz3Zs7SWjwk8yCpeLXZsfKd4+PFovp8d+cIXlPsfkFnDYpruDcQwtPm9l3+UKwx9LR/
        nXy9f2jW0P8ArKM43s7ytET+zaY4wyscD0BId6KXTpDT2/y2+bRbSZY7nGnyDjo/bweJb8WGkr56NFb4
        z4p5WjzhqnFeO6WnJhpG+1G8fEwj9QtkXrPKWM1tHcwyB7tjHHowlJtEc5eRWZ7m1DkXGP8AYwmJd8GG
        kP6NWE5scc7R5wzjFee6XXweYOVparCOaDvlexldQ436LRbXaev+Xk2Rpcs9ySZN7IcS7XPiYoxwha6R
        1dTogH5qJk6WpHuVmfnw/LdXQz/lKZZH7NsmYai6IzvG/Eu0h+QAMPmCoOXpHPflO3y/PNKppcde7f5p
        dHG1oDWgBo1ANFADkAoUzvxlIfS8BAQEBAQEBAQf/9k=
</value>
  </data>
</root>